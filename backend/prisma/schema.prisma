// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Car {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  ratePerDay   Int
  ratePerMonth Int
  make         String
  imgUrl       String
  transmission String
  name         String
  shortName    String   @unique
  displayName  String
  seat         Int
  model        String
  petrol       String
  isFeatured   Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  rent         Rent[]

  @@map("cars")
}

model Rent {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  startDate    DateTime   @default(now())
  endDate      DateTime
  branchId     String     @db.ObjectId
  branch       Branch     @relation(fields: [branchId], references: [id], onDelete: Cascade)
  clientId     String     @db.ObjectId
  client       Client     @relation(fields: [clientId], references: [id], onDelete: Cascade)
  rentStatusId String     @db.ObjectId
  rentStatus   RentStatus @relation(fields: [rentStatusId], references: [id], onDelete: Cascade)
  carId        String     @db.ObjectId
  car          Car        @relation(fields: [carId], references: [id], onDelete: Cascade)

  @@map("rents")
}

model Client {
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  fullName         String
  primaryContact   String
  secondaryContact String?
  primaryAddress   String?
  sourceOfIncome   String?
  clientStatusId   String        @db.ObjectId
  clientStatus     ClientStatus  @relation(fields: [clientStatusId], references: [id], onDelete: Cascade)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  rent             Rent[]
  TravelGuide      TravelGuide[]

  @@map("clients")
}

model ClientStatus {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Client    Client[]

  @@map("clientstatus")
}

model RentStatus {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Rent      Rent[]

  @@map("rentstatus")
}

model Branch {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Rent      Rent[]

  @@map("branches")
}

model TravelGuide {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  clientId       String   @db.ObjectId
  client         Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  travelLocation String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("travelguide")
}
